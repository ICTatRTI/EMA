print(3*9)
for (i in 1:10) {
print(i^2)
}
devtools::install_github("wilkelab/ungeviz")
source("~/ncs-lts/library.R")
install_formats()
source("~/ncs-lts/library.R")
wd = getwd()
setwd('C:/Users/sweisberg/OneDrive - Research Triangle Institute/Documents/EMA/EMA/Model/Results')
source("empirical_supply_curve.R")
source("../../Data/R scripts/sim_results_distribution.R")
regions = unique(meede_data$region)
region = "SC" #PA
ratios_sort = sort(shock_ratios$ratio)
ratios = c(ratios_sort[5], ratios_sort[25],1,ratios_sort[75], ratios_sort[95])
full_frame = NA
qs = c()
ps = c()
for (r in ratios) {
print(r)
adjusted_data = adjust_fuel_px(meede_data, r)
temp_frame = plot_supply_curves(adjusted_data, capacities, axis_lengths, region_filter = region, return = "frame")
if (r == 1) {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
} else {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
}
o = intersection(temp_frame, method = "interpolation")
print(o)
qs = c(qs,o$quantity)
ps = c(ps,o$price)
if (is.na(full_frame)) {
full_frame = temp_frame
} else {
full_frame = rbind(full_frame, temp_frame)
}
#plot = plot_supply_curves(adjusted_data, region_filter = "USA")
#plot = plot + plot_annotation(title = paste("USA--ratio: ", r,sep = ""), theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
#print(plot)
}
for (r in ratios) {
print(r)
adjusted_data = adjust_fuel_px(meede_data, r)
temp_frame = plot_supply_curves(adjusted_data, capacities, axis_lengths, region_filter = region, return = "frame")
if (r == 1) {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
} else {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
}
o = intersection(temp_frame, mode = "interpolation")
print(o)
qs = c(qs,o$quantity)
ps = c(ps,o$price)
if (is.na(full_frame)) {
full_frame = temp_frame
} else {
full_frame = rbind(full_frame, temp_frame)
}
#plot = plot_supply_curves(adjusted_data, region_filter = "USA")
#plot = plot + plot_annotation(title = paste("USA--ratio: ", r,sep = ""), theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
#print(plot)
}
region = "MN" #PA
ratios_sort = sort(shock_ratios$ratio)
ratios = c(ratios_sort[10], ratios_sort[30],1,ratios_sort[70], ratios_sort[90])
full_frame = NA
qs = c()
ps = c()
for (r in ratios) {
print(r)
adjusted_data = adjust_fuel_px(meede_data, r)
temp_frame = plot_supply_curves(adjusted_data, capacities, axis_lengths, region_filter = region, return = "frame")
if (r == 1) {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
} else {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
}
o = intersection(temp_frame, mode = "interpolation")
print(o)
qs = c(qs,o$quantity)
ps = c(ps,o$price)
if (is.na(full_frame)) {
full_frame = temp_frame
} else {
full_frame = rbind(full_frame, temp_frame)
}
#plot = plot_supply_curves(adjusted_data, region_filter = "USA")
#plot = plot + plot_annotation(title = paste("USA--ratio: ", r,sep = ""), theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
#print(plot)
}
points = data.frame(ps,qs, ratios)
colnames(points) = c("price", "quantity", "ratio")
plot = plot_supply_curves_multi(full_frame, points, region_filter = region)
plot = plot + plot_annotation(title = region, theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
print(plot)
source("empirical_supply_curve.R")
region = "MN" #PA
ratios_sort = sort(shock_ratios$ratio)
ratios = c(ratios_sort[10], ratios_sort[30],1,ratios_sort[70], ratios_sort[90])
full_frame = NA
qs = c()
ps = c()
for (r in ratios) {
print(r)
adjusted_data = adjust_fuel_px(meede_data, r)
temp_frame = plot_supply_curves(adjusted_data, capacities, axis_lengths, region_filter = region, return = "frame")
if (r == 1) {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
} else {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
}
o = intersection(temp_frame, mode = "interpolation")
print(o)
qs = c(qs,o$quantity)
ps = c(ps,o$price)
if (is.na(full_frame)) {
full_frame = temp_frame
} else {
full_frame = rbind(full_frame, temp_frame)
}
#plot = plot_supply_curves(adjusted_data, region_filter = "USA")
#plot = plot + plot_annotation(title = paste("USA--ratio: ", r,sep = ""), theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
#print(plot)
}
points = data.frame(ps,qs, ratios)
colnames(points) = c("price", "quantity", "ratio")
plot = plot_supply_curves_multi(full_frame, points, region_filter = region)
plot = plot + plot_annotation(title = region, theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
print(plot)
source("empirical_supply_curve.R")
region = "MN" #PA
ratios_sort = sort(shock_ratios$ratio)
ratios = c(ratios_sort[10], ratios_sort[30],1,ratios_sort[70], ratios_sort[90])
full_frame = NA
qs = c()
ps = c()
for (r in ratios) {
print(r)
adjusted_data = adjust_fuel_px(meede_data, r)
temp_frame = plot_supply_curves(adjusted_data, capacities, axis_lengths, region_filter = region, return = "frame")
if (r == 1) {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
} else {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
}
o = intersection(temp_frame, mode = "interpolation")
print(o)
qs = c(qs,o$quantity)
ps = c(ps,o$price)
if (is.na(full_frame)) {
full_frame = temp_frame
} else {
full_frame = rbind(full_frame, temp_frame)
}
#plot = plot_supply_curves(adjusted_data, region_filter = "USA")
#plot = plot + plot_annotation(title = paste("USA--ratio: ", r,sep = ""), theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
#print(plot)
}
points = data.frame(ps,qs, ratios)
colnames(points) = c("price", "quantity", "ratio")
plot = plot_supply_curves_multi(full_frame, points, region_filter = region)
plot = plot + plot_annotation(title = region, theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
print(plot)
print(price_shock_elasticity(points))
View(points)
source("empirical_supply_curve.R")
print(price_shock_elasticity(points))
source("empirical_supply_curve.R")
print(price_shock_elasticity(points))
regions = unique(meede_data$region)
source("empirical_supply_curve.R")
source("../../Data/R scripts/sim_results_distribution.R")
source("empirical_supply_curve.R")
regions = unique(meede_data$region)
ratios_sort = sort(shock_ratios$ratio)
ratios = c(ratios_sort[10], ratios_sort[30],1,ratios_sort[70], ratios_sort[90])
e_regions = c()
elasticities = c()
for (region in regions) {
print(region)
#region = "MN" #PA
full_frame = NA
qs = c()
ps = c()
for (r in ratios) {
#print(r)
adjusted_data = adjust_fuel_px(meede_data, r)
temp_frame = plot_supply_curves(adjusted_data, capacities, axis_lengths, region_filter = region, return = "frame")
if (r == 1) {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
} else {
temp_frame = temp_frame %>% mutate(ratio = as.character(r))
}
o = intersection(temp_frame, mode = "interpolation")
#print(o)
qs = c(qs,o$quantity)
ps = c(ps,o$price)
if (is.na(full_frame)) {
full_frame = temp_frame
} else {
full_frame = rbind(full_frame, temp_frame)
}
#plot = plot_supply_curves(adjusted_data, region_filter = "USA")
#plot = plot + plot_annotation(title = paste("USA--ratio: ", r,sep = ""), theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
#print(plot)
}
points = data.frame(ps,qs, ratios)
colnames(points) = c("price", "quantity", "ratio")
plot = plot_supply_curves_multi(full_frame, points, region_filter = region)
plot = plot + plot_annotation(title = region, theme = theme(plot.title = element_text(face = "bold", hjust = 0.5)))
print(plot)
ggsave(paste("C:/Users/sweisberg/Research Triangle Institute/Henry, Candise - MEEDE Present/Figures_1210/supply_curve_shock", region, ".png",sep = ""), width = 6.67, height = 4, units = "in")
#print(price_shock_elasticity(points))
e = price_shock_elasticity(points)
e_regions = c(e_regions, region)
elasticities = c(elasticities, e)
}
View(meede_data)
View(capacities)
View(axis_lengths)
elasticities_frame = data.frame(e_regions, elasticities)
colnames(elasticities_frame) = c("State", "Elasticity")
View(elasticities_frame)
elasticities_frame %>% mutate(Elasticity = 1/Elasticity)
elasticities_frame = elasticities_frame %>% mutate(Elasticity = 1/Elasticity)
elasticities_frame = elasticities_frame %>% mutate(Elasticity = 1/Elasticity)
rbind(NA, points)
source("~/EMA/EMA/Model/Results/supply_curve_elasticity_plots.R")
View(elasticities_frame)
View(points_all)
source("~/EMA/EMA/Model/Results/supply_curve_elasticity_plots.R")
source("~/EMA/EMA/Model/Results/supply_curve_elasticity_plots.R")
View(elasticities_frame)
View(points_all)
source("~/EMA/EMA/Model/Results/state_supply_curve_plots.R")
source("~/EMA/EMA/Model/Results/state_supply_curve_plots.R")
ggsave("C:/Users/sweisberg/Research Triangle Institute/Henry, Candise - MEEDE Present/Figures_1210/supply_curve_2x2.png", width = 6.67, height = 4, units = "in")
source("~/EMA/EMA/Model/Results/state_supply_curve_plots.R")
source("empirical_supply_curve.R")
plot = plot_supply_curves_facet(state_frames_small,5)
print(plot)
ggsave("C:/Users/sweisberg/Research Triangle Institute/Henry, Candise - MEEDE Present/Figures_1210/supply_curve_5x5.png", width = 6.67, height = 4, units = "in")
source("empirical_supply_curve.R")
plot = plot_supply_curves_facet(state_frames_small,5)
print(plot)
ggsave("C:/Users/sweisberg/Research Triangle Institute/Henry, Candise - MEEDE Present/Figures_1210/supply_curve_5x5.png", width = 6.67, height = 4, units = "in")
source("empirical_supply_curve.R")
plot = plot_supply_curves_facet(state_frames_small,5)
print(plot)
ggsave("C:/Users/sweisberg/Research Triangle Institute/Henry, Candise - MEEDE Present/Figures_1210/supply_curve_5x5.png", width = 6.67, height = 4, units = "in")
View(points_all)
price_shock_elasticity(points)
source("~/EMA/EMA/Model/Results/supply_curve_elasticity_plots.R")
View(ind_elasticity_frame)
source("~/EMA/EMA/Model/Results/supply_curve_elasticity_plots.R")
View(points_all)
points_all = points_all %>% left_join(ind_elasticity_frame, by = c("ratio" = "ratio", "state" = "region"))
source("~/EMA/EMA/Model/Results/supply_curve_elasticity_plots.R")
View(points_all)
points_all_merged = points_all %>% left_join(ind_elasticity_frame, by = c("ratio" = "ratio", "state" = "region"))
View(points_all_merged)
View(points_all_merged)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100) %>%
ggplot() %>%
geom_col(aes(x = region, y = elasticity, fill = ratio), position = "dodge") %>%
scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
scale_x_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100) %>%
ggplot() %>%
geom_col(aes(x = region, y = elasticity, fill = ratio), position = "dodge") +
scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
scale_x_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100) %>%
ggplot() +
geom_col(aes(x = region, y = elasticity, fill = ratio), position = "dodge") +
scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
scale_x_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100) %>%
ggplot() +
geom_col(aes(x = region, y = elasticity, fill = ratio), position = "dodge") +
scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, fill = ratio), position = "dodge") +
scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100) #%>%
View(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, group = state, fill = ratio), position = "dodge") +
scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, group = state, fill = ratio), position = "dodge") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100, elasticity >= 0) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, group = state, fill = ratio), position = "dodge") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100, elasticity >= 0) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, group = state, fill = ratio), position = "dodge", stat = "identity") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100, elasticity >= 0) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, fill = ratio), position = "dodge") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100, elasticity >= 0) %>%
ggplot() +
geom_bar(aes(x = state, y = elasticity, fill = ratio), position = "dodge") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100, elasticity >= 0) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, fill = ratio), position = "dodge") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100, elasticity >= 0) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity), position = "dodge") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 100, elasticity >= 0) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, fill = as.factor(ratio)), position = "dodge") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
p = points_all_merged %>% filter(!(is.na(state)), price >= 0, ratio != 1, elasticity <= 50, elasticity >= 0) %>%
ggplot() +
geom_col(aes(x = state, y = elasticity, fill = as.factor(ratio)), position = "dodge") +
#scale_y_continuous(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
#scale_x_discrete(limits = c(0,NA), expand = expansion(mult = c(0,0.05))) +
labs(x = "State", y = "Elasticity") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
print(p)
ggsave(paste("C:/Users/sweisberg/Research Triangle Institute/Henry, Candise - MEEDE Present/Figures_1210/elasticity_bars.png","",sep = ""), width = 6.67, height = 4, units = "in")
