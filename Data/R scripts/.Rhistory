#scale_fill_manual(values = colors, name = "Generation") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(size = 10), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack") +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(values = colors) +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(size = 10), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack") +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(breaks = c("Contract", "Henry Hub", "New Contract", "Spot Purchase"),values = colors, name = "Purchase Type") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(size = 10), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack", width = 0.5) +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(breaks = c("Contract", "Henry Hub", "New Contract", "Spot Purchase"),values = colors, name = "Purchase Type") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_text(size = 10), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack", width = 0.5) +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(breaks = c("Contract", "Henry Hub", "New Contract", "Spot Purchase"),values = colors, name = "Purchase Type") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank(), axis.title.y = element_blank(),
axis.text.x = element_blank(), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack", width = 0.5) +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(breaks = c("Contract", "Henry Hub", "New Contract", "Spot Purchase"),values = colors, name = "Purchase Type") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank, axis.title.y = element_text(size = 10),
axis.text.x = element_blank(), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack", width = 0.5) +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(breaks = c("Contract", "Henry Hub", "New Contract", "Spot Purchase"),values = colors, name = "Purchase Type") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank,
axis.text.x = element_blank(), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack", width = 0.5) +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(breaks = c("Contract", "Henry Hub", "New Contract", "Spot Purchase"),values = colors, name = "Purchase Type") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank(),
axis.text.x = element_blank(), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack", width = 0.5) +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(breaks = c("Contract", "Henry Hub", "New Contract", "Spot Purchase"),values = colors, name = "Purchase Type") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank,
axis.text.x = element_blank(), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
ggsave("C:/Users/sweisberg/Research Triangle Institute/Henry, Candise - MEEDE Present/Figures_1112/contract_breakdown.png", width = 1, height = 4, units = "in")
contract_breakdown_plot = function(counts) {
p = counts %>% ggplot() +
geom_col(aes(x = 1, y = count, fill = factor(series,levels = c("New Contract", "Contract", "Spot Purchase"))), position = "stack", width = 0.5) +
scale_y_continuous(expand = expansion(mult = c(0,0.1))) +
scale_fill_manual(breaks = c("Contract", "Henry Hub", "New Contract", "Spot Purchase"),values = colors, name = "Purchase Type") +
labs(x = "Average", y = "Contracts") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_blank(), axis.text.y = element_blank(),
axis.text.x = element_blank(), plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "None")
return(p)
}
p = contract_breakdown_plot(counts)
print(p)
ggsave("C:/Users/sweisberg/Research Triangle Institute/Henry, Candise - MEEDE Present/Figures_1112/contract_breakdown.png", width = 1, height = 4, units = "in")
View(counts)
827/sum(counts$count)
1104/sum(counts$count)
12/sum(counts$count)
unique(dta$Plant.Id)
generation_scatter = function(price_data, gen_data, threshold = 80) {
# ID which plants ONLY run on gas
# create a frame with all combinations of plant, year, month
plants = unique(price_data$Plant.Id)
months = seq(1,12)
years = seq(2013,2019)
plants_full = sort(rep(plants, length(months) * length(years)))
months_full = rep(months, length(years) * length(plants))
years_full = rep(sort(rep(years,length(months))),length(plants))
combos = data.frame(plants_full, months_full, years_full)
colnames(combos) = c("Plant.Id", "MONTH", "YEAR")
combos = combos %>% mutate(zeros = 0) %>%
mutate(MONTH = as.factor(MONTH), YEAR = as.factor(YEAR))
#
temp = data.frame(table(price_data %>% select(Plant.Id, YEAR, MONTH, FUEL_GROUP))) %>% mutate(Plant.Id = as.character(Plant.Id))
temp_coal = temp %>% filter(FUEL_GROUP == "Coal") %>% rename("Coal" = "Freq") %>% select(-FUEL_GROUP)
temp_gas = temp %>% filter(FUEL_GROUP == "Natural Gas") %>% mutate(FUEL_GROUP = "Gas") %>% rename("Gas" = "Freq") %>% select(-FUEL_GROUP)
temp_merged = temp_coal %>% full_join(temp_gas, by = c("Plant.Id", "YEAR", "MONTH")) %>% full_join(combos, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(gas_only = ifelse(Gas > 0 & Coal == 0, 1, 0)) %>%
group_by(Plant.Id) %>% summarize(gas_only = sum(gas_only)) %>%
filter(gas_only >= threshold)
# finally, yikes!
gas_only_plants = unique(temp_merged$Plant.Id)
View(gas_only_plants)
# group price data by plant and filter out coal
price_data = price_data %>% filter(FUEL_GROUP == "Natural Gas", Purchase.Type %in% c("Contract", "Spot Purchase"), Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(QUANTITY = sum(QUANTITY))
# group generation data by plant
gen_data = gen_data %>% filter(Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(GENERATION = sum(Net.Generation))
# merge data
data_merged = price_data %>% left_join(gen_data, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(QUANTITY = QUANTITY * 1.037) # convert to btu
p = data_merged %>% mutate(yr = ifelse(YEAR > 2014,1,0)) %>% #filter(YEAR > 2012) %>%
ggplot() +
geom_point(aes(x = QUANTITY, y = GENERATION / 10^6, color = as.factor(yr))) +
scale_y_continuous(limits = c(0, 2.5), expand = expansion(mult = c(0,0.0))) +
scale_x_continuous(limits = c(0,15000000), expand = expansion(mult = c(0,0.1))) +
scale_color_brewer(palette = "Set1") +
labs(x = "Monthly Fuel Quantity (MMBtu)", y = "Monthly Generation (TWh)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
return(p)
}
p = generation_scatter(dta, dta_gen)
print(p)
generation_scatter = function(price_data, gen_data, threshold = 80) {
# ID which plants ONLY run on gas
# create a frame with all combinations of plant, year, month
plants = unique(price_data$Plant.Id)
months = seq(1,12)
years = seq(2013,2019)
plants_full = sort(rep(plants, length(months) * length(years)))
months_full = rep(months, length(years) * length(plants))
years_full = rep(sort(rep(years,length(months))),length(plants))
combos = data.frame(plants_full, months_full, years_full)
colnames(combos) = c("Plant.Id", "MONTH", "YEAR")
combos = combos %>% mutate(zeros = 0) %>%
mutate(MONTH = as.factor(MONTH), YEAR = as.factor(YEAR))
#
temp = data.frame(table(price_data %>% select(Plant.Id, YEAR, MONTH, FUEL_GROUP))) %>% mutate(Plant.Id = as.character(Plant.Id))
temp_coal = temp %>% filter(FUEL_GROUP == "Coal") %>% rename("Coal" = "Freq") %>% select(-FUEL_GROUP)
temp_gas = temp %>% filter(FUEL_GROUP == "Natural Gas") %>% mutate(FUEL_GROUP = "Gas") %>% rename("Gas" = "Freq") %>% select(-FUEL_GROUP)
temp_merged = temp_coal %>% full_join(temp_gas, by = c("Plant.Id", "YEAR", "MONTH")) %>% full_join(combos, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(gas_only = ifelse(Gas > 0 & Coal == 0, 1, 0)) %>%
group_by(Plant.Id) %>% summarize(gas_only = sum(gas_only)) %>%
filter(gas_only >= threshold)
# finally, yikes!
gas_only_plants = unique(temp_merged$Plant.Id)
print(length(gas_only_plants))
# group price data by plant and filter out coal
price_data = price_data %>% filter(FUEL_GROUP == "Natural Gas", Purchase.Type %in% c("Contract", "Spot Purchase"), Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(QUANTITY = sum(QUANTITY))
# group generation data by plant
gen_data = gen_data %>% filter(Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(GENERATION = sum(Net.Generation))
# merge data
data_merged = price_data %>% left_join(gen_data, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(QUANTITY = QUANTITY * 1.037) # convert to btu
p = data_merged %>% mutate(yr = ifelse(YEAR > 2014,1,0)) %>% #filter(YEAR > 2012) %>%
ggplot() +
geom_point(aes(x = QUANTITY, y = GENERATION / 10^6, color = as.factor(yr))) +
scale_y_continuous(limits = c(0, 2.5), expand = expansion(mult = c(0,0.0))) +
scale_x_continuous(limits = c(0,15000000), expand = expansion(mult = c(0,0.1))) +
scale_color_brewer(palette = "Set1") +
labs(x = "Monthly Fuel Quantity (MMBtu)", y = "Monthly Generation (TWh)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
return(p)
}
p = generation_scatter(dta, dta_gen)
generation_scatter = function(price_data, gen_data, threshold = 80) {
# ID which plants ONLY run on gas
# create a frame with all combinations of plant, year, month
plants = unique(price_data$Plant.Id)
months = seq(1,12)
years = seq(2013,2019)
plants_full = sort(rep(plants, length(months) * length(years)))
months_full = rep(months, length(years) * length(plants))
years_full = rep(sort(rep(years,length(months))),length(plants))
combos = data.frame(plants_full, months_full, years_full)
colnames(combos) = c("Plant.Id", "MONTH", "YEAR")
combos = combos %>% mutate(zeros = 0) %>%
mutate(MONTH = as.factor(MONTH), YEAR = as.factor(YEAR))
#
temp = data.frame(table(price_data %>% select(Plant.Id, YEAR, MONTH, FUEL_GROUP))) %>% mutate(Plant.Id = as.character(Plant.Id))
temp_coal = temp %>% filter(FUEL_GROUP == "Coal") %>% rename("Coal" = "Freq") %>% select(-FUEL_GROUP)
temp_gas = temp %>% filter(FUEL_GROUP == "Natural Gas") %>% mutate(FUEL_GROUP = "Gas") %>% rename("Gas" = "Freq") %>% select(-FUEL_GROUP)
temp_merged = temp_coal %>% full_join(temp_gas, by = c("Plant.Id", "YEAR", "MONTH")) %>% full_join(combos, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(gas_only = ifelse(Gas > 0 & Coal == 0, 1, 0)) %>%
group_by(Plant.Id) %>% summarize(gas_only = sum(gas_only)) %>%
filter(gas_only >= threshold)
# finally, yikes!
gas_only_plants = unique(temp_merged$Plant.Id)
print(length(gas_only_plants))
# group price data by plant and filter out coal
price_data = price_data %>% filter(FUEL_GROUP == "Natural Gas", Purchase.Type %in% c("Contract", "Spot Purchase"), Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(QUANTITY = sum(QUANTITY))
# group generation data by plant
gen_data = gen_data %>% filter(Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(GENERATION = sum(Net.Generation))
# merge data
data_merged = price_data %>% left_join(gen_data, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(QUANTITY = QUANTITY * 1.037) # convert to btu
p = data_merged %>% mutate(yr = ifelse(YEAR > 2013,1,0)) %>% #filter(YEAR > 2012) %>%
ggplot() +
geom_point(aes(x = QUANTITY, y = GENERATION / 10^6, color = as.factor(yr))) +
scale_y_continuous(limits = c(0, 2.5), expand = expansion(mult = c(0,0.0))) +
scale_x_continuous(limits = c(0,15000000), expand = expansion(mult = c(0,0.1))) +
scale_color_brewer(palette = "Set1") +
labs(x = "Monthly Fuel Quantity (MMBtu)", y = "Monthly Generation (TWh)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
return(p)
}
p = generation_scatter(dta, dta_gen)
print(p)
generation_scatter = function(price_data, gen_data, threshold = 80) {
# ID which plants ONLY run on gas
# create a frame with all combinations of plant, year, month
plants = unique(price_data$Plant.Id)
months = seq(1,12)
years = seq(2013,2019)
plants_full = sort(rep(plants, length(months) * length(years)))
months_full = rep(months, length(years) * length(plants))
years_full = rep(sort(rep(years,length(months))),length(plants))
combos = data.frame(plants_full, months_full, years_full)
colnames(combos) = c("Plant.Id", "MONTH", "YEAR")
combos = combos %>% mutate(zeros = 0) %>%
mutate(MONTH = as.factor(MONTH), YEAR = as.factor(YEAR))
#
temp = data.frame(table(price_data %>% select(Plant.Id, YEAR, MONTH, FUEL_GROUP))) %>% mutate(Plant.Id = as.character(Plant.Id))
temp_coal = temp %>% filter(FUEL_GROUP == "Coal") %>% rename("Coal" = "Freq") %>% select(-FUEL_GROUP)
temp_gas = temp %>% filter(FUEL_GROUP == "Natural Gas") %>% mutate(FUEL_GROUP = "Gas") %>% rename("Gas" = "Freq") %>% select(-FUEL_GROUP)
temp_merged = temp_coal %>% full_join(temp_gas, by = c("Plant.Id", "YEAR", "MONTH")) %>% full_join(combos, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(gas_only = ifelse(Gas > 0 & Coal == 0, 1, 0)) %>%
group_by(Plant.Id) %>% summarize(gas_only = sum(gas_only)) %>%
filter(gas_only >= threshold)
# finally, yikes!
gas_only_plants = unique(temp_merged$Plant.Id)
print(length(gas_only_plants))
# group price data by plant and filter out coal
price_data = price_data %>% filter(FUEL_GROUP == "Natural Gas", Purchase.Type %in% c("Contract", "Spot Purchase"), Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(QUANTITY = sum(QUANTITY))
# group generation data by plant
gen_data = gen_data %>% filter(Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(GENERATION = sum(Net.Generation))
# merge data
data_merged = price_data %>% left_join(gen_data, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(QUANTITY = QUANTITY * 1.037) # convert to btu
p = data_merged %>% mutate(yr = ifelse(YEAR == 2013,1,0)) %>% #filter(YEAR > 2012) %>%
ggplot() +
geom_point(aes(x = QUANTITY, y = GENERATION / 10^6, color = as.factor(yr))) +
scale_y_continuous(limits = c(0, 2.5), expand = expansion(mult = c(0,0.0))) +
scale_x_continuous(limits = c(0,15000000), expand = expansion(mult = c(0,0.1))) +
scale_color_brewer(palette = "Set1") +
labs(x = "Monthly Fuel Quantity (MMBtu)", y = "Monthly Generation (TWh)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
return(p)
}
p = generation_scatter(dta, dta_gen)
print(p)
generation_scatter = function(price_data, gen_data, threshold = 80) {
# ID which plants ONLY run on gas
# create a frame with all combinations of plant, year, month
plants = unique(price_data$Plant.Id)
months = seq(1,12)
years = seq(2013,2019)
plants_full = sort(rep(plants, length(months) * length(years)))
months_full = rep(months, length(years) * length(plants))
years_full = rep(sort(rep(years,length(months))),length(plants))
combos = data.frame(plants_full, months_full, years_full)
colnames(combos) = c("Plant.Id", "MONTH", "YEAR")
combos = combos %>% mutate(zeros = 0) %>%
mutate(MONTH = as.factor(MONTH), YEAR = as.factor(YEAR))
#
temp = data.frame(table(price_data %>% select(Plant.Id, YEAR, MONTH, FUEL_GROUP))) %>% mutate(Plant.Id = as.character(Plant.Id))
temp_coal = temp %>% filter(FUEL_GROUP == "Coal") %>% rename("Coal" = "Freq") %>% select(-FUEL_GROUP)
temp_gas = temp %>% filter(FUEL_GROUP == "Natural Gas") %>% mutate(FUEL_GROUP = "Gas") %>% rename("Gas" = "Freq") %>% select(-FUEL_GROUP)
temp_merged = temp_coal %>% full_join(temp_gas, by = c("Plant.Id", "YEAR", "MONTH")) %>% full_join(combos, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(gas_only = ifelse(Gas > 0 & Coal == 0, 1, 0)) %>%
group_by(Plant.Id) %>% summarize(gas_only = sum(gas_only)) %>%
filter(gas_only >= threshold)
# finally, yikes!
gas_only_plants = unique(temp_merged$Plant.Id)
print(length(gas_only_plants))
# group price data by plant and filter out coal
price_data = price_data %>% filter(FUEL_GROUP == "Natural Gas", Purchase.Type %in% c("Contract", "Spot Purchase"), Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(QUANTITY = sum(QUANTITY))
# group generation data by plant
gen_data = gen_data %>% filter(Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(GENERATION = sum(Net.Generation))
# merge data
data_merged = price_data %>% left_join(gen_data, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(QUANTITY = QUANTITY * 1.037) # convert to btu
p = data_merged %>% mutate(yr = ifelse(YEAR == 2014,1,0)) %>% #filter(YEAR > 2012) %>%
ggplot() +
geom_point(aes(x = QUANTITY, y = GENERATION / 10^6, color = as.factor(yr))) +
scale_y_continuous(limits = c(0, 2.5), expand = expansion(mult = c(0,0.0))) +
scale_x_continuous(limits = c(0,15000000), expand = expansion(mult = c(0,0.1))) +
scale_color_brewer(palette = "Set1") +
labs(x = "Monthly Fuel Quantity (MMBtu)", y = "Monthly Generation (TWh)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
return(p)
}
p = generation_scatter(dta, dta_gen)
print(p)
generation_scatter = function(price_data, gen_data, threshold = 80) {
# ID which plants ONLY run on gas
# create a frame with all combinations of plant, year, month
plants = unique(price_data$Plant.Id)
months = seq(1,12)
years = seq(2013,2019)
plants_full = sort(rep(plants, length(months) * length(years)))
months_full = rep(months, length(years) * length(plants))
years_full = rep(sort(rep(years,length(months))),length(plants))
combos = data.frame(plants_full, months_full, years_full)
colnames(combos) = c("Plant.Id", "MONTH", "YEAR")
combos = combos %>% mutate(zeros = 0) %>%
mutate(MONTH = as.factor(MONTH), YEAR = as.factor(YEAR))
#
temp = data.frame(table(price_data %>% select(Plant.Id, YEAR, MONTH, FUEL_GROUP))) %>% mutate(Plant.Id = as.character(Plant.Id))
temp_coal = temp %>% filter(FUEL_GROUP == "Coal") %>% rename("Coal" = "Freq") %>% select(-FUEL_GROUP)
temp_gas = temp %>% filter(FUEL_GROUP == "Natural Gas") %>% mutate(FUEL_GROUP = "Gas") %>% rename("Gas" = "Freq") %>% select(-FUEL_GROUP)
temp_merged = temp_coal %>% full_join(temp_gas, by = c("Plant.Id", "YEAR", "MONTH")) %>% full_join(combos, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(gas_only = ifelse(Gas > 0 & Coal == 0, 1, 0)) %>%
group_by(Plant.Id) %>% summarize(gas_only = sum(gas_only)) %>%
filter(gas_only >= threshold)
# finally, yikes!
gas_only_plants = unique(temp_merged$Plant.Id)
print(length(gas_only_plants))
# group price data by plant and filter out coal
price_data = price_data %>% filter(FUEL_GROUP == "Natural Gas", Purchase.Type %in% c("Contract", "Spot Purchase"), Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(QUANTITY = sum(QUANTITY))
# group generation data by plant
gen_data = gen_data %>% filter(Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(GENERATION = sum(Net.Generation))
# merge data
data_merged = price_data %>% left_join(gen_data, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(QUANTITY = QUANTITY * 1.037) # convert to btu
p = data_merged %>% mutate(yr = ifelse(YEAR == 2015,1,0)) %>% #filter(YEAR > 2012) %>%
ggplot() +
geom_point(aes(x = QUANTITY, y = GENERATION / 10^6, color = as.factor(yr))) +
scale_y_continuous(limits = c(0, 2.5), expand = expansion(mult = c(0,0.0))) +
scale_x_continuous(limits = c(0,15000000), expand = expansion(mult = c(0,0.1))) +
scale_color_brewer(palette = "Set1") +
labs(x = "Monthly Fuel Quantity (MMBtu)", y = "Monthly Generation (TWh)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
return(p)
}
p = generation_scatter(dta, dta_gen)
print(p)
generation_scatter = function(price_data, gen_data, threshold = 80) {
# ID which plants ONLY run on gas
# create a frame with all combinations of plant, year, month
plants = unique(price_data$Plant.Id)
months = seq(1,12)
years = seq(2013,2019)
plants_full = sort(rep(plants, length(months) * length(years)))
months_full = rep(months, length(years) * length(plants))
years_full = rep(sort(rep(years,length(months))),length(plants))
combos = data.frame(plants_full, months_full, years_full)
colnames(combos) = c("Plant.Id", "MONTH", "YEAR")
combos = combos %>% mutate(zeros = 0) %>%
mutate(MONTH = as.factor(MONTH), YEAR = as.factor(YEAR))
#
temp = data.frame(table(price_data %>% select(Plant.Id, YEAR, MONTH, FUEL_GROUP))) %>% mutate(Plant.Id = as.character(Plant.Id))
temp_coal = temp %>% filter(FUEL_GROUP == "Coal") %>% rename("Coal" = "Freq") %>% select(-FUEL_GROUP)
temp_gas = temp %>% filter(FUEL_GROUP == "Natural Gas") %>% mutate(FUEL_GROUP = "Gas") %>% rename("Gas" = "Freq") %>% select(-FUEL_GROUP)
temp_merged = temp_coal %>% full_join(temp_gas, by = c("Plant.Id", "YEAR", "MONTH")) %>% full_join(combos, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(gas_only = ifelse(Gas > 0 & Coal == 0, 1, 0)) %>%
group_by(Plant.Id) %>% summarize(gas_only = sum(gas_only)) %>%
filter(gas_only >= threshold)
# finally, yikes!
gas_only_plants = unique(temp_merged$Plant.Id)
print(length(gas_only_plants))
# group price data by plant and filter out coal
price_data = price_data %>% filter(FUEL_GROUP == "Natural Gas", Purchase.Type %in% c("Contract", "Spot Purchase"), Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(QUANTITY = sum(QUANTITY))
# group generation data by plant
gen_data = gen_data %>% filter(Plant.Id %in% gas_only_plants) %>%
group_by(Plant.Id, YEAR, MONTH) %>% summarize(GENERATION = sum(Net.Generation))
# merge data
data_merged = price_data %>% left_join(gen_data, by = c("Plant.Id", "YEAR", "MONTH")) %>%
mutate(QUANTITY = QUANTITY * 1.037) # convert to btu
p = data_merged %>% mutate(yr = ifelse(YEAR != 2014,1,0)) %>% #filter(YEAR > 2012) %>%
ggplot() +
geom_point(aes(x = QUANTITY, y = GENERATION / 10^6, color = as.factor(yr))) +
scale_y_continuous(limits = c(0, 2.5), expand = expansion(mult = c(0,0.0))) +
scale_x_continuous(limits = c(0,15000000), expand = expansion(mult = c(0,0.1))) +
scale_color_brewer(palette = "Set1") +
labs(x = "Monthly Fuel Quantity (MMBtu)", y = "Monthly Generation (TWh)") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.ticks = element_blank(),
axis.line.x = element_line(size = 0.5, color = "black", linetype=1),
axis.line.y = element_line(size = 0.5, color = "black", linetype=1),
axis.text.x = element_text(size = 10), axis.text.y = element_text(size = 10),
plot.title = element_blank(), legend.position = "None")
return(p)
}
p = generation_scatter(dta, dta_gen)
print(p)
